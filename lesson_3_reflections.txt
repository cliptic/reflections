git remote # create and view remotes
git remote add name http://address.git # adds a remote repository (first create an empty repository on github and copy the address)
git remote -v # v stands for verbouse - it will show more information
git push origin master # sends commits to remote repository called "origin" from a local branch called "master"
git pull origin master # receives commits from remote to local repository

---------------------------------------------------------------------------------------

When would you want to use a remote repository rather than keeping all your work
local?

    When you want to share your project with other colaborators and save your project in a cloud.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    There might be some unwanted changes proposed by other users. So you want to check before pulling them.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks work on GitHub and you can fork another repository into your own account.
    Clones can be executed from GitHub to your local repository and vice versa. From local to local.
    Branches are made on your local or remote repositories.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    To check all the online changes that have been made while you are offline and possibly incorporate them into your code.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
